<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>Dancing with Machine, Human and God</title>
    <link>http://longlinht.github.io/</link>
    <description>World is complex,confusing and wonderful,I will talk about machine,human and god to known it, to reveal it.</description>
    <pubDate>Wed, 10 Aug 2016 00:00:00 +0800</pubDate>
    <item>
      <title>Java References</title>
      <link>http://longlinht.github.io//java-references</link>
      <description>Before JDK 1.2, if a object isn't referenced by any variable, it can't be used any more.Since JDK 1.2, Java has four reference types.In order from strongest to weakest these references are: Strong, Soft, Weak, Phantom. 

</description>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0800</pubDate>
      <dc:date>2016-08-10T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>Android Thread Related Stuff</title>
      <link>http://longlinht.github.io//thread-looper-handler-in-android</link>
      <description>It's widely known that it's illegal to update UI components directly from threads other than main thread in android. This a rule in Android world, we can't violate it. But, so many situations we need 
update UI when we finish something in separated thread. This is a basic problem, it will refer more important concepts related thread.

</description>
      <pubDate>Sat, 06 Aug 2016 03:00:00 +0800</pubDate>
      <dc:date>2016-08-06T03:00:00+08:00</dc:date>
    </item>
    <item>
      <title>Understanding Java Garbage Collection</title>
      <link>http://longlinht.github.io//java-garbage-collection</link>
      <description>**stop-the-world** Stop-the-world means that the JVM is stopping the application from running to execute a GC. When stop-the-world occurs, every thread except for the threads needed for the GC will stop their tasks. The interrupted tasks will resume only after the GC task has completed. GC tuning often means reducing this stop-the-world time.

</description>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0800</pubDate>
      <dc:date>2016-08-05T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>Android Binder Mechanism</title>
      <link>http://longlinht.github.io//android-binder-mechanism</link>
      <description>#### What is Binder

</description>
      <pubDate>Wed, 03 Aug 2016 03:00:00 +0800</pubDate>
      <dc:date>2016-08-03T03:00:00+08:00</dc:date>
    </item>
    <item>
      <title>Memory Leak in Android Development</title>
      <link>http://longlinht.github.io//memory-leak-in-android-development</link>
      <description>When programming Android, although java has GC mechanism, some our wrong code way and personal habits still cause memory leak, GC also can't fix it.

</description>
      <pubDate>Mon, 01 Aug 2016 22:00:00 +0800</pubDate>
      <dc:date>2016-08-01T22:00:00+08:00</dc:date>
    </item>
    <item>
      <title>I Do Not Know What I May Appear To The World</title>
      <link>http://longlinht.github.io//I-do-not-know-what-I-may-appear-to-the-world</link>
      <description>作为“God”板块的第一篇，引用牛顿爵士的一段话来开启。

</description>
      <pubDate>Thu, 09 Jun 2016 01:20:00 +0800</pubDate>
      <dc:date>2016-06-09T01:20:00+08:00</dc:date>
    </item>
    <item>
      <title>Easy doesn't enter into grown-up life</title>
      <link>http://longlinht.github.io//easy-doesnt-enter-into-grown-up-life</link>
      <description>这是我“Human”目录的第一篇文章，我以一句电影里的台词作为题目，“成年人的生活里没有容易二字”。这个板块其实我更不知道写什么，不过倒是可以借此文来解释一下那个奇怪的目录名称，其实这个奇怪的名称源于我几年前写
的一句话“ 茕茕孑力，与机器，人，神共舞”。此文止,期待后续的文章。


</description>
      <pubDate>Thu, 09 Jun 2016 00:10:00 +0800</pubDate>
      <dc:date>2016-06-09T00:10:00+08:00</dc:date>
    </item>
    <item>
      <title>Hello World</title>
      <link>http://longlinht.github.io//hello-world</link>
      <description>This is my first post for Machine category, I named it 'Hello World' to start my blog. Because many developers start their first program with a single line code to print 'Hello World'. Certainly my first line code also is 'Hello World' in C programming language. I hope this will be a good start!

</description>
      <pubDate>Thu, 09 Jun 2016 00:00:00 +0800</pubDate>
      <dc:date>2016-06-09T00:00:00+08:00</dc:date>
    </item>
    <item>
      <title>Similarities and Differences between Java and C++</title>
      <link>http://longlinht.github.io//similarities-and-differences-between-java-and-cpp</link>
      <description>* Java does not support typedefs, defines, or a preprocessor. 

</description>
      <pubDate>Sun, 15 Jan 2012 22:00:00 +0800</pubDate>
      <dc:date>2012-01-15T22:00:00+08:00</dc:date>
    </item>
    <item>
      <title>高质量C++编程注意事项</title>
      <link>http://longlinht.github.io//high-quality-cpp</link>
      <description>* 不提倡使用全局变量，尽量不要在头文件中出现象extern int value 这类声明

</description>
      <pubDate>Sat, 05 Feb 2011 22:00:00 +0800</pubDate>
      <dc:date>2011-02-05T22:00:00+08:00</dc:date>
    </item>
    <item>
      <title>Split a String in C++</title>
      <link>http://longlinht.github.io//split-s-string-in-cpp</link>
      <description>There are many ways to split a string in C++, but what's the most elegant way to split a string in C++? May be we can find it step by step. The most simple and direct way is use `istringstream` to split.

</description>
      <pubDate>Wed, 15 Dec 2010 22:00:00 +0800</pubDate>
      <dc:date>2010-12-15T22:00:00+08:00</dc:date>
    </item>
    <dc:date>2016-08-10T00:00:00+08:00</dc:date>
  </channel>
</rss>